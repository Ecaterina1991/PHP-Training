Nota1: metoda get nu arata datele in interiorul browserului/url ului, iar post va arata. cand lasi utilizatorul sa dea submit la date, utilizezi metoda post, iar cand vrei sa ii arati ceva utilizatorului inauntrul paginii, utilizezi metoda get

daca vrei sa dai submit la date in aceeasi pagina in care te afli, in cadrul valorii action:

action="<?php echo $_SERVER["PHP_SELF"]; ?>"

toate inputurile html trebuie sa aiba un atribut name. utilizand name-ul vom lua informatia din input data de utilizator, iar in cazul select option se va lua value de la option

completez datele, dau submit si nu se intampla nimic
ne ducem in formhandler.php si verificam daca utilizatorul a folosit acest fisier intr-un mod particular
vom folosi o conditie

de fiecare data cand vrem sa dam submit data catre alta pagina trebuie sa rulam aceasta conditie

if($_SERVER["REQUEST_METHOD"] == "POST") 

pentru ca ea trebuie sa fie verificata de fiecare data. dupa ce finalizam, intram in conditie si aici vrem sa luam datele

$firstname = $_POST["firstname"];

aici luam datele din form

o regula de baza este sa nu ai incredere niciodata in ce da submit utilizatorul si pentru asta folosim htmlspecialchars o functie prestabilita. aceasta functie ia datele si le transforma in niste entitati html care nu mai pot fi preluate ca si cod

 $firstname = htmlspecialchars($_POST["firstname"]);
  $lastname = htmlspecialchars($_POST["lastname"]);
  $favouritepet = htmlspecialchars($_POST["favourotepet"]);

  in acest bloc de cod numele variabilelor pot fi oricare doar ca este bine sa fie descriptive ca sa intelegem noi cu ce lucram

  header("Location: ./form.php");

  cu asta trimit utilizatorul inapoi in form. utilizatorul completeaza datele, ele sunt preluate in formhandler si executate dar utilizatorul ramane in pagina formului cu ajutorul header location

  if (empty($firstname)) {
    exit();
    header("Location: ./form.php");
  }

  cu acest cod verific daca inputul de la firstname a fost lasat gol si daca a fost lasat gol nu continui executarea codului si revin la pagina formului.

  atributul required inserat in tagul formului nu rezolva problema pentru ca si cu required putem da submit. intotdeauna folosim securitatea de tip serverside

  Urmatoarea lectie:

https://www.youtube.com/watch?v=oY91DwQyGlI&list=PL0eyrZgxdwhwwQQZA79OzYwl5ewA7HQih&index=7&ab_channel=DaniKrossing